vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    
    vector<int> graph[V];
    for(auto val : edges){
        graph[val[0]].emplace_back(val[1]);
        graph[val[1]].emplace_back(val[0]);
    }
    vector<int> visited(V,0);
    vector<int> tmp;
    function<void(int)> dfs = [&](int v){
        if(visited[v]) return;
        visited[v] = 1;
        for(auto c : graph[v]){
            dfs(c);
        }
        tmp.emplace_back(v);
    };
    vector<vector<int>> ans;
    for(int i=0;i<V;++i){
        if(!visited[i]){
            dfs(i);
            ans.emplace_back(tmp);
            tmp.clear();
        }
    }
    return ans;
    
}
